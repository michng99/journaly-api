version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: journaly-postgres
    environment:
      POSTGRES_DB: journaly
      POSTGRES_USER: journaly_user
      POSTGRES_PASSWORD: journaly_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - journaly-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U journaly_user -d journaly"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: journaly-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - journaly-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Journaly API Application
  api:
    build: .
    container_name: journaly-api
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/journaly
      - DATABASE_USERNAME=journaly_user
      - DATABASE_PASSWORD=journaly_password
      - DATABASE_DRIVER=org.postgresql.Driver
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECURITY_USER_NAME=admin
      - SECURITY_USER_PASSWORD=admin123
      - AZURE_AI_KEY=${AZURE_AI_KEY:-}
      - AZURE_AI_ENDPOINT=${AZURE_AI_ENDPOINT:-}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - journaly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/entries/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: journaly-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - journaly-network
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: journaly-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - journaly-network
    profiles:
      - monitoring

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: journaly-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@journaly.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - journaly-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local

networks:
  journaly-network:
    driver: bridge
